services:
  openmemory-qdrant:
    image: qdrant/qdrant:latest
    container_name: stacksmith_openmemory_qdrant
    restart: unless-stopped
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - openmemory-qdrant-data:/qdrant/storage
    networks:
      - stacksmith
    # Health check removed due to curl/wget not being available in Qdrant image
    # Container logs show service is ready when "Qdrant HTTP listening on 6333" appears

  openmemory-postgres:
    image: postgres:15-alpine
    container_name: stacksmith_openmemory_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-openmemory}
      - POSTGRES_USER=${POSTGRES_USER:-openmemory}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - openmemory-postgres-data:/var/lib/postgresql/data
    networks:
      - stacksmith
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-openmemory} -d ${POSTGRES_DB:-openmemory}"]
      interval: 30s
      timeout: 10s
      retries: 3

  openmemory-api:
    image: ghcr.io/michaelschmidle/stacksmith-openmemory-api:latest
    container_name: stacksmith_openmemory_api
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://openmemory-qdrant:6333
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-openmemory}:${POSTGRES_PASSWORD}@openmemory-postgres:5432/${POSTGRES_DB:-openmemory}
      - MCP_SERVER_PORT=8765
      - API_PORT=8765
    depends_on:
      - openmemory-qdrant
      - openmemory-postgres
    networks:
      - stacksmith
    labels:
      - "traefik.enable=true"
      # API routes (with /api prefix stripped)
      - "traefik.http.routers.openmemory-api.rule=Host(`${OPENMEMORY_HOSTNAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.openmemory-api.entrypoints=websecure-tailscale"
      - "traefik.http.routers.openmemory-api.tls.certresolver=stacksmith"
      - "traefik.http.middlewares.openmemory-api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.openmemory-api.middlewares=openmemory-api-stripprefix,secure-headers@docker"
      # MCP routes (direct routing without prefix stripping)
      - "traefik.http.routers.openmemory-mcp.rule=Host(`${OPENMEMORY_HOSTNAME}`) && PathPrefix(`/mcp`)"
      - "traefik.http.routers.openmemory-mcp.entrypoints=websecure-tailscale"
      - "traefik.http.routers.openmemory-mcp.tls.certresolver=stacksmith"
      - "traefik.http.routers.openmemory-mcp.middlewares=secure-headers@docker"
      # Service configuration (shared by both routers)
      - "traefik.http.services.openmemory-api.loadbalancer.server.port=8765"
    # Health check removed - curl may not be available in the image
    # FastAPI server logs show when ready: "Uvicorn running on http://0.0.0.0:8765"

  openmemory-ui:
    image: ghcr.io/michaelschmidle/stacksmith-openmemory-ui:latest
    container_name: stacksmith_openmemory_ui
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=https://${OPENMEMORY_HOSTNAME}/api
      - NEXT_PUBLIC_USER_ID=${USER:-stacksmith}
    depends_on:
      - openmemory-api
    networks:
      - stacksmith
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openmemory-ui.rule=Host(`${OPENMEMORY_HOSTNAME}`)"
      - "traefik.http.routers.openmemory-ui.entrypoints=websecure-tailscale"
      - "traefik.http.routers.openmemory-ui.tls.certresolver=stacksmith"
      - "traefik.http.services.openmemory-ui.loadbalancer.server.port=3000"
      - "traefik.http.routers.openmemory-ui.middlewares=secure-headers@docker"

volumes:
  openmemory-qdrant-data:
    driver: local
  openmemory-postgres-data:
    driver: local

networks:
  stacksmith:
    external: true