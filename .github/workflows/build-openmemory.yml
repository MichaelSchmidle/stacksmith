name: Build OpenMemory Images

on:
  workflow_dispatch:
  schedule:
    # Build weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  push:
    paths:
      - '.github/workflows/build-openmemory.yml'
      - 'openmemory/**'

env:
  REGISTRY: ghcr.io
  IMAGE_API: ghcr.io/michaelschmidle/stacksmith-openmemory-api
  IMAGE_UI: ghcr.io/michaelschmidle/stacksmith-openmemory-ui

jobs:
  build-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get latest stable release
        id: latest_release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/mem0ai/mem0/releases/latest | jq -r '.tag_name')
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Using latest stable release: $LATEST_TAG"

      - name: Checkout mem0 repository
        uses: actions/checkout@v4
        with:
          repository: mem0ai/mem0
          ref: ${{ steps.latest_release.outputs.tag }}
          path: mem0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_API }}
          tags: |
            type=raw,value=latest
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            type=sha,prefix={{branch}}-

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./mem0/openmemory/api
          file: ./mem0/openmemory/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-ui:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get latest stable release
        id: latest_release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/mem0ai/mem0/releases/latest | jq -r '.tag_name')
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Using latest stable release: $LATEST_TAG"

      - name: Checkout mem0 repository
        uses: actions/checkout@v4
        with:
          repository: mem0ai/mem0
          ref: ${{ steps.latest_release.outputs.tag }}
          path: mem0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_UI }}
          tags: |
            type=raw,value=latest
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            type=sha,prefix={{branch}}-

      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: ./mem0/openmemory/ui
          file: ./mem0/openmemory/ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-compose:
    runs-on: ubuntu-latest
    needs: [build-api, build-ui]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update docker-compose.yml with new images
        run: |
          # Get the latest image digests
          API_DIGEST=$(docker manifest inspect ${{ env.IMAGE_API }}:latest | jq -r '.manifests[0].digest')
          UI_DIGEST=$(docker manifest inspect ${{ env.IMAGE_UI }}:latest | jq -r '.manifests[0].digest')
          
          # Update the docker-compose.yml file
          sed -i "s|image: .*openmemory.*api.*|image: ${{ env.IMAGE_API }}@${API_DIGEST}|g" openmemory/docker-compose.yml
          sed -i "s|image: .*openmemory.*ui.*|image: ${{ env.IMAGE_UI }}@${UI_DIGEST}|g" openmemory/docker-compose.yml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update OpenMemory images to latest builds"
          title: "Update OpenMemory Docker images"
          body: |
            Automated update of OpenMemory Docker images to latest builds.
            
            - API: ${{ env.IMAGE_API }}:latest
            - UI: ${{ env.IMAGE_UI }}:latest
            
            Built from upstream mem0ai/mem0 repository.
          branch: update-openmemory-images
          delete-branch: true