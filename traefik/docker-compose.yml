services:
  traefik:
    image: traefik:latest
    container_name: stacksmith_traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/dynamic
      - --providers.file.watch=true
      - --entrypoints.web-tailscale.address=:80
      - --entrypoints.websecure-tailscale.address=:443
      - --entrypoints.web-secondary.address=:8080
      - --entrypoints.websecure-secondary.address=:8443
      - --entrypoints.web-tailscale.http.redirections.entrypoint.to=websecure-tailscale
      - --entrypoints.web-tailscale.http.redirections.entrypoint.scheme=https
      - --entrypoints.web-secondary.http.redirections.entrypoint.to=websecure-secondary
      - --entrypoints.web-secondary.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.stacksmith.acme.dnschallenge=true
      - --certificatesresolvers.stacksmith.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.stacksmith.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.stacksmith.acme.storage=/letsencrypt/acme.json
    ports:
      - "${TRAEFIK_TAILSCALE_IP}:80:80"
      - "${TRAEFIK_TAILSCALE_IP}:443:443"
      - "${TRAEFIK_SECONDARY_IP}:80:8080"
      - "${TRAEFIK_SECONDARY_IP}:443:8443"
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
      - ./dynamic:/dynamic:ro
      - ./certs:/certs:ro
    networks:
      - stacksmith
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_HOSTNAME}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure-tailscale"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=stacksmith"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=secure-headers@docker"
      # Define secure-headers middleware via Docker labels
      - "traefik.http.middlewares.secure-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.secure-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.secure-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.secure-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.secure-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.secure-headers.headers.customResponseHeaders.X-Robots-Tag=noindex, nofollow, nosnippet, noarchive"
      - "traefik.http.middlewares.secure-headers.headers.customResponseHeaders.Permissions-Policy=geolocation=(), microphone=(), camera=()"
networks:
  stacksmith:
    name: stacksmith
    external: true

volumes:
  traefik-certificates:
